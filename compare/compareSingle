一：比较各种单例模式的优缺点
    1.饿汉式
        优点：1：没有加任何的锁、执行效率比较高
              2：线程安全，在线程还没出现以前就是实例化了，不可能存在访问安全问题

        缺点： 类加载的时候就初始化，浪费内存

    2.懒汉式

        优点： 使用的时候才加载，提高执行效率，不会造成内存浪费
        缺点： 存在线程安全问题，可以使用双重检查锁和内部类单例去避免线程问题

    3.threadlocal单例

        优点：1.在每一个线程中是安全的，每一个线程中是实例是唯一的
              2.可以使用来做多数据源的切换

        缺点：在多个线程中,实例是不同的。

    4.注册时单例

       1.容器式单例：
                优点： 1.本质上是懒加载，不会造成内存的浪费
                       2.便于对象的管理

                 缺点： 线程不安全

       2.枚举类单例

                优点：1.本质上是饿汉式单例，保证了线程的安全
                      2.从JVM层面上 防止了反序列化对单例的破坏和反射对单例的破坏

二：破坏单例的方式

       1.反射：通过在构造器中判断对象是否存在，存在则抛出异常防止该单例被破坏

       2.反序列化：可以重写 readResolve方法去覆盖新产生的对象，新产生的对象在JVM内部会被GC回收。

